---
title: Getting started with Haskell tooling
---

This article helps the Haskell neophyte get started with an IDE for Haskell.
It assumes that you have a predeliction for IntelliJ.

# Install stack

IntelliJ requires use of the Stack build tool.
Install it by following [these instructions(https://docs.haskellstack.org/en/stable/install_and_upgrade/).

# Enable IntelliJ

In IntelliJ, install the [IntelliJ-Haskell plugin](https://plugins.jetbrains.com/plugin/8258-intellij-haskell/).
In `File / Project Structure / SDKs` (`⌘-;`), add an entry for Stack.
 
![](/images/haskell-sdks.png)

You can find the location of stack via `which stack`, on OS X typically at `/usr/local/bin/stack`.

# Create a project

In the parent directory where you want to create a Haskell project, run `stack new someproject`. 
The output should look like:
```bash
Downloading template "new-template" to create project "someproject" in someproject/ ...

 :

Looking for .cabal or package.yaml files to use to init the project.
Using cabal packages:
- someproject/

Selecting the best among 16 snapshots...

* Matches lts-14.4

Selected resolver: lts-14.4
Initialising configuration using resolver: lts-14.4
Total number of user packages considered: 1
Writing configuration to file: someproject/stack.yaml
All done.
```

To build the project:
```bash
cd someproject
stack build
```

## Stack project templates

TODO

# Open project in IntelliJ

To open the project, select `File / New / Project from existing sources`.
Choose Haskell Stack.

![](/images/haskell-existing-project.png)

Navigate to and select the `someproject` directory created above.

IntelliJ should open the project. This might take a while, even a long while, to download dependencies and look busy generally.

## IDE capabilities

IntelliJ can provide some basic IDE capabilities, but if you are used to its capabilities in Java, Kotlin or Scala, you might find the range of capabilities surprisingly minor. Some things it _can_ do:

- reformat code (`⌘-L`) – this is equivalent to running the `hindent` tool
- organise imports (`⌘-O`)
- auto-import (via `⌥-Enter` popup menu)
- apply suggestion (via `⌥-Enter` popup menu) – suggestions are equivalent to those generated by the `hlint` tool

# Development workflow

TODO

## ghcid

TODO

## Running tests

TODO

